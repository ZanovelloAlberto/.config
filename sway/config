# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
exec "gammastep -l 45.7:11.8 -t 5700:1050 -m wayland"
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu exec $(tofi-run)

### Output configuration
exec mako
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /home/alberto/.config/wallpapers/fireguard.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
set $opacity 0.92
#for_window [class=".*"] opacity $opacity
# for_window [app_id="foot"] opacity $opacity
for_window [tiling] opacity $opacity

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# custom layout 


input "*" {
   xkb_layout us
   xkb_options caps:swapescape  
    repeat_delay 200
    repeat_rate 35
}
input * {
    #left_handed enabled
    tap enabled
    natural_scroll disabled
    dwt enable
    accel_profile "flat" 
    pointer_accel 0.08 # set mouse sensitivity (between -1 and 1)
}
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaymsg exit
	#
	# Moving around:
	#


    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up   focus up 
    bindsym $mod+$right focus right
    bindsym $mod+n focus next 

    # default_border none
    default_border pixel 6
    default_floating_border none
    font pango:monospace 3
	# hide_edge_borders smart
    titlebar_padding 1
    titlebar_border_thickness 0
	gaps inner 0
	gaps outer 0

    bindsym $mod+Shift+$left move left
    # bindsym $mod+Shift+$down move down
    # bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # 
    # bindsym $mod+Shift+$down workspace prev
    bindsym $mod+u workspace next

#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show


exec mpvpaper '*' ~/.config/wallpapers/fireguard.png -o "input-ipc-server=/tmp/mpv-socket --loop"
# --volume 0"
# mpvpaper
bindsym $mod+Ctrl+left exec echo 'seek -4' | socat - /tmp/mpv-socket
bindsym $mod+Ctrl+right exec echo 'seek 4' | socat - /tmp/mpv-socket
bindsym $mod+Ctrl+Space exec echo 'cycle pause' | socat - /tmp/mpv-socket
bindsym $mod+Ctrl+up exec echo 'add volume +2' | socat - /tmp/mpv-socket
bindsym $mod+Ctrl+down exec echo 'add volume -2' | socat - /tmp/mpv-socket
bindsym $mod+Ctrl+q exec fish -c "mpvc loadfile ~/.config/wallpapers/fireguard.png"
# bindsym $mod+Ctrl+q exec fish -c "mpvc loadfile ~/.config/wallpapers/fireguard.png"
bindsym $mod+Ctrl+l exec echo "loadfile '$(wl-paste)'" | socat - /tmp/mpv-socket
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
bindsym $mod+o exec foot -L alsamixer

bindsym $mod+p exec grim -g "$(slurp -d)" - | wl-copy &&  wl-paste > ~/.config/lastscreen.png
# bindsym $mod+i if set -q UNO; set -e UNO; else set $UNO REC; end
# bindsym $mod+i exec cd ~/.config/sway/ && wf-recorder -g "$(slurp)"
# record screen

# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

bar {
    font pango:DejaVu Sans Mono, FontAwesome 9
    position top
    status_command i3status-rs 
    colors {
        separator #666666
        background #222222
        statusline #dddddd
        focused_workspace #0088CC #0088CC #ffffff
        active_workspace #333333 #333333 #ffffff
        inactive_workspace #333333 #333333 #888888
        urgent_workspace #2f343a #900000 #ffffff
    }
}
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
# 	# status_command while if [$UNO == "1"] echo "yes" else echo "false" end; do sleep 1; done
# 	# status_command while ls ~/.config/sway/; do sleep 1; done
#
#     # status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

# exec /usr/bin/python ~/git/change_bg/script.py tip 
include /etc/sway/config.d/*
